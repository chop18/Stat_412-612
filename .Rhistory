date_pluse_30_SH1 = first_date_SH1+days(30),
date_pluse_30_SH2 = first_date_SH2+days(30))->main_covid_df
main_covid_df
main_covid_df %>%
group_by(state_name) %>%
mutate(cohort_SH1 = case_when(stay_home_restrictions !=1 & date<=first_date_SH1 & date>=(first_date_SH1-days(14))~"a",
date<=date_pluse_30_SH1 & date>=(date_pluse_30_SH1-days(14))~"b",
TRUE  ~"None"),
cohort_SH2= case_when(stay_home_restrictions !=2 & date<=first_date_SH2 & date>=(first_date_SH2-days(14))~"a",
date<=date_pluse_30_SH2 & date>=(date_pluse_30_SH2-days(14))~"b",
date<=date_pluse_30_SH2 + days(30) & date>=(date_pluse_30_SH2 + days(16))~"c",
TRUE ~"None")) %>%
mutate(daily_cases = c(0,diff(confirmed)),
rate = c(0,diff(daily_cases))) %>%
filter(cohort_SH2 !="None") %>%
group_by(state_name, cohort_SH2) %>%
summarize(mean_cases = mean(daily_cases),
mean_rate = mean(rate))->cohort_rate
cohort_rate %>%
pivot_wider(names_from = "cohort_SH2", values_from = c("mean_cases", "mean_rate")) ->cohort_rate_wide
cohort_rate_wide %>%
left_join(y=easy_covid_df, by="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/population)
#
easy_covid_df %>%
group_by(state_name, stay_home_restrictions) %>%
mutate(first_date0 = min(date)) %>%
select(state_name, date, first_date0, stay_home_restrictions) %>%
distinct(first_date0, .keep_all = TRUE) %>%
filter(!is.na(stay_home_restrictions)&(!stay_home_restrictions==0)) %>%
arrange(first_date0) %>%
group_by(first_date0) %>%
mutate(num_of_states_with_with_rest=n()) %>%
separate(first_date0,
c("Year", "Month", "Day")) %>%
arrange(Month, Day) %>%
distinct(state_name, .keep_all=TRUE)->first_date_stayh_orders2
knitr::opts_chunk$set(echo = TRUE)
cohort_rate %>%
pivot_wider(names_from = "cohort_SH2", values_from = c("mean_cases", "mean_rate")) ->cohort_rate_wide
cohort_rate_wide %>%
left_join(y=easy_covid_df, by="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/population)
cohort_rate_wide
knitr::opts_chunk$set(echo = TRUE)
library(COVID19)
library(tidyverse)
library(readr)
library(lubridate)
covid19("US", level = 2) %>%
rename(state_name = administrative_area_level_2 ) %>%
select(-c("administrative_area_level_1","administrative_area_level_3","latitude","longitude","currency", "administrative_area_level_1")) %>%
relocate("state_name", "date", "confirmed", "tests")-> easy_covid_df
easy_covid_df %>%
full_join(y=min_date, by = "state_name") %>%
rename(first_date_SH0 = R_0,
first_date_SH1 = R_1,
first_date_SH2 = R_2) %>%
select(state_name, date, stay_home_restrictions, first_date_SH0, first_date_SH1, first_date_SH2, confirmed, deaths, population) %>%
mutate(date_pluse_30_SH0 = first_date_SH0+days(30),
date_pluse_30_SH1 = first_date_SH1+days(30),
date_pluse_30_SH2 = first_date_SH2+days(30))->main_covid_df
main_covid_df %>%
group_by(state_name) %>%
mutate(cohort_SH1 = case_when(stay_home_restrictions !=1 & date<=first_date_SH1 & date>=(first_date_SH1-days(14))~"a",
date<=date_pluse_30_SH1 & date>=(date_pluse_30_SH1-days(14))~"b",
TRUE  ~"None"),
cohort_SH2= case_when(stay_home_restrictions !=2 & date<=first_date_SH2 & date>=(first_date_SH2-days(14))~"a",
date<=date_pluse_30_SH2 & date>=(date_pluse_30_SH2-days(14))~"b",
date<=date_pluse_30_SH2 + days(30) & date>=(date_pluse_30_SH2 + days(16))~"c",
TRUE ~"None")) %>%
mutate(daily_cases = c(0,diff(confirmed)),
rate = c(0,diff(daily_cases))) %>%
filter(cohort_SH2 !="None") %>%
group_by(state_name, cohort_SH2) %>%
summarize(mean_cases = mean(daily_cases),
mean_rate = mean(rate))->cohort_rate
cohort_rate %>%
pivot_wider(names_from = "cohort_SH2", values_from = c("mean_cases", "mean_rate")) ->cohort_rate_wide
cohort_rate_wide %>%
left_join(y=easy_covid_df, by="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/population)
cohort_rate
cohort_rate
cohort_rate %>%
pivot_wider(names_from = "cohort_SH2", values_from = c("mean_cases", "mean_rate")) ->cohort_rate_wide
View(cohort_rate_wide)
cohort_rate_wide %>%
left_join(y=easy_covid_df, by="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/population)
cohort_rate_wide %>%
left_join(y=easy_covid_df, by="state_name") %>%
view()
cohort_rate_wide
cohort_rate_wide %>%
left_join(y=easy_covid_df, by="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/population)
cohort_rate_wide %>%
left_join(y=easy_covid_df, by="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/max(population))
cohort_rate_wide
cohort_rate_wide %>%
left_join(y=easy_covid_df) %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/max(population))
cohort_rate_wide %>%
left_join(y=easy_covid_df) %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/max(population))
cohort_rate_wide
glimpse(cohort_rate_wide)
glimpse(easy_covid_df)
cohort_rate_wide %>%
left_join(y=easy_covid_df, by =) %>%
view()
cohort_rate_wide %>%
left_join(y=easy_covid_df, by ="state_name") %>%
view()
cohort_rate_wide %>%
left_join(y=select(easy_covid_df, c(state_name, population)), by ="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/max(population))
cohort_rate_wide %>%
left_join(y=select(easy_covid_df, c(state_name, population)), by ="state_name") %>%
view()
select(easy_covid_df, c(state_name, population)
select(easy_covid_df, c(state_name, population))
select(easy_covid_df, c(state_name, population))
cohort_rate %>%
pivot_wider(names_from = "cohort_SH2", values_from = c("mean_cases", "mean_rate")) ->cohort_rate_wide
cohort_rate_wide
cohort_rate_wide %>%
left_join(y=distinct(select(easy_covid_df, c(state_name, population))), by ="state_name") %>%
view()
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/max(population))
cohort_rate_wide %>%
left_join(y=distinct(select(easy_covid_df, c(state_name, population))), by ="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/max(population))
cohort_rate_wide %>%
left_join(y=distinct(select(easy_covid_df, c(state_name, population))), by ="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/population)
getwd()
cohort_rate_wide %>%
left_join(y=distinct(select(easy_covid_df, c(state_name, population))), by ="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/population,
c_minus_b = mean_cases_b - mean_cases_c)/population)
cohort_rate_wide %>%
left_join(y=distinct(select(easy_covid_df, c(state_name, population))), by ="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/population,
c_minus_b = mean_cases_b - mean_cases_c)/population))
cohort_rate %>%
pivot_wider(names_from = "cohort_SH2", values_from = c("mean_cases", "mean_rate")) ->cohort_rate_wide
cohort_rate_wide
cohort_rate_wide %>%
left_join(y=distinct(select(easy_covid_df, c(state_name, population))), by ="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/population,
c_minus_b = (mean_cases_b - mean_cases_c)/population))
cohort_rate_wide %>%
left_join(y=distinct(select(easy_covid_df, c(state_name, population))), by ="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/population,
c_minus_b = (mean_cases_b - mean_cases_c)/population)
cohort_rate_wide %>%
left_join(y=distinct(select(easy_covid_df, c(state_name, population))), by ="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/population,
c_minus_b = (mean_cases_b - mean_cases_c)/population)-> graphs_abc
cohort_rate_wide %>%
left_join(y=distinct(select(easy_covid_df, c(state_name, population))), by ="state_name") %>%
mutate(b_minus_a = (mean_cases_b - mean_cases_a)/population,
c_minus_b = (mean_cases_b - mean_cases_c)/population)-> for_graph_abc
View(graphs_abc)
for_graph_abc %>%
ggplot(aes(x= b_minus_a)) %>%
geom_histogram()
for_graph_abc %>%
ggplot(aes(x= b_minus_a)) %>%
geom_histogram()
for_graph_abc %>%
ggplot(aes(x= b_minus_a))+
geom_histogram()
for_graph_abc %>%
ggplot(aes(x= b_minus_a))+
geom_bar()
for_graph_abc %>%
ggplot(aes(x= state_name, y= b_minus_a))+
geom_histogram()
for_graph_abc %>%
ggplot(aes(x= state_name, y= b_minus_a))+
geom_histogram()
for_graph_abc %>%
ggplot(aes(x= state_name, y= b_minus_a))+
geom_density()
for_graph_abc %>%
ggplot(aes(x= state_name, y= b_minus_a))+
geom_boxplot()
knitr::opts_chunk$set(echo = TRUE)
ungroup() %>%
group_by(state_name) %>%
#pivot_wider( names_from = stay_home_restrictions, values_from = first_date0, names_prefix = "R-") %>%
view()
for_graph_abc %>%
ggplot(aes(x= state_name, y= b_minus_a))+
geom_histogram()
library(tidyverse)
library(ggplot2)
covid_df_csv <- read_csv(file = "https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv")
write_rds(covid_df_csv, "./data/covid_data.rds" ,  compress = "gz")
read_rds("./data/covid_data.rds")-> covid_df
covid_df %>%
nrow()
covid_df %>%
arrange(desc(date)) %>%
slice_head(n=1) %>%
select(date)
covid_df %>%
group_by(state, county) %>% #Sort the data by state and county.
mutate(state = parse_factor(state),
county = parse_factor(county)) %>%
ungroup()-> c_data
#Use the levels() function in checking how many levels there are for county and for state?
length(levels(c_data$county))
length(levels(c_data$state))
#How many unique combinations of county and state are there?
c_data %>%
distinct(state, county) %>%
nrow()
c_data %>%
distinct(state, county) -> combinations_sc
fct_count(combinations_sc$county) %>%
arrange(-n) %>%
filter(f != "Unknown") %>%
slice_head(n=6)
#Check
combinations_sc %>%
filter(county %in% c("Washington", "Jefferson"))
# c_data %>%
#   group_by(state, county) %>%
#   mutate(min_date = min(date)) %>%
#   filter(deaths>=0) %>%
#   distinct(min_date, .keep_all = TRUE) %>%
#   relocate(date, min_date)-> min_date_cases
c_data %>%
group_by(state,county) %>%
filter(cases> 0 | deaths> 0) %>%
arrange( state, county, date) %>%
mutate(cases_daily = c(0, diff(cases)),
death_daily = c(0, diff(deaths))) %>%
select(date, state, county, cases_daily, fips, death_daily, deaths, cases) -> c_daily_rate
c_daily_rate %>%
filter(state == "Hawaii") %>%
tail(n=20)
c_daily_rate %>%
group_by(date, state) %>%
summarise(s_cases_sum = sum(cases_daily),
s_deaths_sum = sum(death_daily))-> daily_sum_state
#Interpret each plot
daily_sum_state %>%
ggplot(aes(x= date, y = s_cases_sum, color = state)) +
ylab("COVID Cases")+
xlab("Date")+
ggtitle("State Cases by Day")+
geom_line(show.legend = FALSE)
daily_sum_state %>%
ggplot(aes(x= date, y = s_deaths_sum, color = state)) +
ggtitle("State Deaths by Day")+
ylab("COVID Deaths")+
xlab("Date")+
geom_line(show.legend = FALSE)
c_data %>%
group_by(state) %>%
summarise( records = n(),
sum_deaths = sum(deaths)) %>%
slice_max(sum_deaths, n=5)
c_data %>%
group_by(state, county) %>%
summarise(records = n(),
sum_deaths = sum(deaths)) %>%
ungroup() %>%
slice_max(sum_deaths, n=5)
c_data %>%
filter( county %in% c("Anne Arundel", "Charles", "Frederick", "Howard", "Montgomery", "Prince George's", "Alexandria city", "Arlington", "Fairfax", "Fairfax city", "Loudon", "Manassas", "Manassa city", "Manassas Park city", "Prince William", "District of Columbia")& state %in% c("Maryland", "District of Columbia", "Virginia")) -> df_dmv0
#Remove data
df_dmv0 %>%
filter(!(county %in% c("Montgomery", "Frederick") & state == "Virginia"))->df_dmv
df_dmv %>%
group_by(county) %>%
ggplot(aes(x=date, y=cases, color=county))+
geom_line()+
scale_y_log10()+
facet_wrap("state")
library(usmap)
fips(state = "DC")-> dc_fips
df_dmv %>%
filter(state == "Virginia") %>%
distinct(county) %>%
pull(county)-> va_county_dmv
fips(state = "Virginia", county = va_county_dmv)->fips_va
df_dmv %>%
filter(state == "Maryland") %>%
distinct(county) %>%
pull(county)-> md_county_dmv
fips(state = "MD", county = md_county_dmv)->fips_md
library("ggrepel")
plot_usmap("counties", include = c(dc_fips, fips_md, fips_va), labels = TRUE)+
labs(title =  "DMV")+
theme(panel.background = element_rect(color = "blue", fill = "lightblue"))
# Cases
df_dmv %>%
group_by(state, county, date) %>%
mutate(sum_cases = sum(cases))->map_cases
plot_usmap(data = map_cases, values = "sum_cases", include = c(dc_fips, fips_md, fips_va), color = "blue")+
scale_fill_continuous(low = "white", high = "red",
name = "Confiremed Cases", label = scales::comma)+
theme(panel.background = element_rect(color = "black", fill = "white")) +
theme(legend.position = "top")+
labs(title = "DMV Region",
subtitle = paste0("Maximum Daliy Cases as of ",
max(map_cases$date)))
#Deaths
df_dmv %>%
group_by(state, county, date) %>%
mutate(sum_deaths = sum(deaths))->map_deaths
plot_usmap(data = map_deaths, values = "sum_deaths", include = c("DC", fips_md, fips_va), color = "blue")+
scale_fill_continuous(low = "white", high = "red",
name = "Deaths", label = scales::comma)+
theme(panel.background = element_rect(color = "black", fill = "white")) +
theme(legend.position = "top")+
labs(title = "DMV Region",
subtitle = paste0("Maximum Daliy Deaths as of ",
max(map_cases$date)))
for_graph_abc
cohort_rate_wide %>%
left_join(y=distinct(select(easy_covid_df, c(state_name, population))), by ="state_name") %>%
mutate(b_minus_a_pop = (mean_cases_b - mean_cases_a)/population,
c_minus_b_pop = (mean_cases_b - mean_cases_c)/population,
b_minus_a= (mean_cases_b - mean_cases_a),
c_minus_b= (mean_cases_b - mean_cases_c))-> for_graph_abc
cohort_rate %>%
pivot_wider(names_from = "cohort_SH2", values_from = c("mean_cases", "mean_rate")) ->cohort_rate_wide
cohort_rate_wide
cohort_rate_wide %>%
left_join(y=distinct(select(easy_covid_df, c(state_name, population))), by ="state_name") %>%
mutate(b_minus_a_pop = (mean_cases_b - mean_cases_a)/population,
c_minus_b_pop = (mean_cases_b - mean_cases_c)/population,
b_minus_a= (mean_cases_b - mean_cases_a),
c_minus_b= (mean_cases_b - mean_cases_c))-> for_graph_abc
for_graph_abc
plot_usmap(include = .south_atlantic, labels = TRUE) +
labs(title = "US South Atlantic States",
subtitle = "This is a blank map of the states in the South Atlantic Census Region") +
theme(panel.background = element_rect(color = "black", fill = "lightblue"))
plot_usmap(regions = "counties") +
labs(title = "US Counties",
subtitle = "This is a blank map of the counties of the United States.") +
theme(panel.background = element_rect(color = "black", fill = "lightblue"))
dmv_county_fips <- c("11001","24003","24009","24017","24021","24027","24031",
"24033","51013","51059","51061","51107","51153","51179",
"51510","51600","51610","51630","51683","51685")
plot_usmap("counties", include = dmv_county_fips, labels = TRUE) +
labs(title = "Greater DMV Area",
subtitle = "These are the Counties/Cities in the Greater DMV area.")+
theme(panel.background = element_rect(color = "blue", fill = "lightblue"))
library(tidyverse)
library(lubridate)
library(usmap)
data(statepop)
head(statepop)
states <- read_csv("./week_11/data/state_geo_data.csv", col_types = cols(OID = col_character()))
library(tidyverse)
library(lubridate)
library(usmap)
data(statepop)
head(statepop)
states <- read_csv("./week_11/data/state_geo_data.csv", col_types = cols(OID = col_character()))
easy_covid_df %>%
select("stay_home_restrictions", "state_name", "date") %>%
filter(!is.na(stay_home_restrictions)) %>%
group_by(state_name) %>%
mutate(test = diff(c(0,stay_home_restrictions))) %>%
filter(test != 0) %>%
rename("Policy_Change_Date" = "date")->policy_change
knitr::opts_chunk$set(echo = TRUE)
library(COVID19)
library(tidyverse)
library(readr)
library(lubridate)
covid19("US", level = 2) %>%
rename(state_name = administrative_area_level_2 ) %>%
select(-c("administrative_area_level_1","administrative_area_level_3","latitude","longitude","currency", "administrative_area_level_1")) %>%
relocate("state_name", "date", "confirmed", "tests")-> easy_covid_df
easy_covid_df %>%
group_by(state_name, stay_home_restrictions) %>%
mutate(first_date0 = min(date)) %>%
select(state_name, date, first_date0, stay_home_restrictions) %>%
distinct(first_date0, .keep_all = TRUE) %>%
filter(!is.na(stay_home_restrictions)&(!stay_home_restrictions==0)) %>%
arrange(first_date0) %>%
group_by(first_date0) %>%
mutate(num_of_states_with_with_rest=n()) %>%
separate(first_date0,
c("Year", "Month", "Day")) %>%
arrange(Month, Day) %>%
distinct(state_name, .keep_all=TRUE)->first_date_stayh_orders2
first_date_stayh_orders2 %>%
arrange(state_name)
#Two columns - one for restriction 1 and one for restriction level 2. Values would be a, b and none in each. The a is the before restriction group (first date - )and the b is the after restriction group (firstdate + 30  ) and then none for dates not in the cohort.
#Then summarize the mean for each cohort in a group by state, restriction level, cohort.
easy_covid_df %>%
group_by(state_name, stay_home_restrictions) %>%
select(c("state_name", "date","confirmed","date", "population", "stay_home_restrictions" )) %>%
mutate(first_date0 = min(date),
dateplus30 = first_date0+days(30)) %>%
ungroup() %>%
group_by(state_name) %>%
# mutate(cohort1 = stay_home_restrictions ==1 ),
#        cohort2= case_when()) %>%
mutate(cohorta= (date<=first_date0 & date>(first_date0-days(14))),
cohortb = (date<dateplus30 & date>=(dateplus30-days(14))))%>%
relocate(cohorta, cohortb, date, first_date0, dateplus30) %>%
arrange(state_name)
easy_covid_df %>%
group_by(state_name, stay_home_restrictions) %>%
select(c("state_name", "date","confirmed","date", "population" )) %>%
mutate(first_date0 = min(date),
dateplus30 = first_date0+days(30)) %>%
distinct(first_date0)
easy_covid_df %>%
select(c("state_name", "date","confirmed","date", "population", "stay_home_restrictions" )) %>%
group_by(state_name, stay_home_restrictions) %>%
mutate(first_date0 = min(date),
dateplus30 = first_date0+days(30)) %>%
ungroup() %>%
group_by(state_name) %>%
mutate(cohort1 = case_when(stay_home_restrictions ==1 & date<="2020-04-30"~"a",
stay_home_restrictions ==1 & date<=dateplus30 & date>=(dateplus30-days(14))~"b",
stay_home_restrictions == 1 & date>first_date0 & date<(dateplus30-days(14))| date<(first_date0-days(14))| date>(dateplus30) | stay_home_restrictions != 1 ~"None"),
cohort2= case_when(stay_home_restrictions ==2 & date<=first_date0 & date>=(first_date0-days(14))~"a",
stay_home_restrictions ==2 & date<=dateplus30 & date>=(dateplus30-days(14))~"b",
stay_home_restrictions == 2 & date>first_date0 & date<(dateplus30-days(14))| date<(first_date0-days(14))| date>(dateplus30) | stay_home_restrictions != 2 ~"None")) %>%
relocate(state_name, stay_home_restrictions, cohort1, cohort2, date, first_date0, dateplus30)->cohort_df
easy_covid_df %>%
select(c("state_name", "date","confirmed","date", "population", "stay_home_restrictions" )) %>%
filter(!is.na(stay_home_restrictions) ) %>%
group_by(state_name, stay_home_restrictions) %>%
summarize(first_date0 = min(date))-> day1and2
day1and2 %>%
pivot_wider(names_from = "stay_home_restrictions", values_from = "first_date0", names_prefix= "R_")->min_date
min_date
easy_covid_df %>%
filter(!is.na(stay_home_restrictions) ) %>%
group_by(state_name, stay_home_restrictions) %>%
summarise(first_date0 = min(date),
dateplus30 = first_date0+days(30))->dayTest
dayTest %>%
pivot_wider(names_from = "stay_home_restrictions", values_from = "dateplus30", names_prefix= "R_")
library(usmap)
library(usmap)
library(usmap)
for_graph_abc %>%
filter(case_type =="deaths_US") %>%
rename(fips = sFIPS)->
state_cases
library(usmap)
library(usmap)
for_graph_abc %>%
filter(case_type =="deaths_US") %>%
rename(fips = sFIPS)->
state_cases
for_graph_abc %>%
filter(case_type =="deaths_US") %>%
rename(fips = sFIPS)->
state_cases
library(usmap)
plot_usmap(data = for_graph_abc, values = "b_minus_a", color = "blue") +
scale_fill_continuous(low = "white", high = "red",
name = "Deaths", label = scales::comma)+
labs(title = "US States",
subtitle = paste0("Total Deaths by State as of ", max(state_cases$Date))) +
theme(panel.background = element_rect(color = "black", fill = "white")) +
theme(legend.position = "top")
library(usmap)
plot_usmap(data = for_graph_abc, values = "b_minus_a", color = "blue") +
scale_fill_continuous(low = "white", high = "red",
name = "Deaths", label = scales::comma)+
labs(title = "US States",
subtitle = paste0("Total Deaths by State as of ")) +
theme(panel.background = element_rect(color = "black", fill = "white")) +
theme(legend.position = "top")
library(usmap)
plot_usmap(data = for_graph_abc, values = "b_minus_a", color = "blue") +
scale_fill_continuous(low = "white", high = "red",
name = "Deaths", label = scales::comma)+
labs(title = "US States",
subtitle = paste0("Total Deaths by State as of ")) +
theme(panel.background = element_rect(color = "black", fill = "white")) +
theme(legend.position = "top")
glimpse(state_totals)
glimpse(state_totals)
state_totals %>%
filter(case_type =="deaths_US") %>%
rename(fips = sFIPS)->
state_cases
library(tidyverse)
library(lubridate)
library(usmap)
data(statepop)
head(statepop)
states <- read_csv("./week_11/data/state_geo_data.csv", col_types = cols(OID = col_character()))
states <- read_csv("./week_11/data/state_geo_data.csv", col_types = cols(OID = col_character()))
library(tidyverse)
library(lubridate)
library(usmap)
data(statepop)
head(statepop)
df_all <- read_rds("./week_11/data/covid_data.rds")
states <- read_csv("./week_11/data/state_geo_data.csv", col_types = cols(OID = col_character()))
